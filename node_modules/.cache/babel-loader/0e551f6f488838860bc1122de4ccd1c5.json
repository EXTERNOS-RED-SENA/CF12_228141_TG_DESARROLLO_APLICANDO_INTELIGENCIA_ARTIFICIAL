{"remainingRequest":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/thread-loader/dist/cjs.js!/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js!/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue","mtime":1734970342831},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/babel.config.js","mtime":1734970342722},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5yZWR1Y2UuanMiOwppbXBvcnQgcGxhbnRpbGxhTWl4aW5zIGZyb20gJ0AvanMvcGxhbnRpbGxhTWl4aW5zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHbG9zYXJpbycsCiAgbWl4aW5zOiBbcGxhbnRpbGxhTWl4aW5zXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZ2xvc2FyaW9EYXRhOiBbewogICAgICAgIHRlcm1pbm86ICfDgXJlYSBiYWpvIGxhIGN1cnZhIChBVUMpJywKICAgICAgICBzaWduaWZpY2FkbzogJ1ZhbG9yIG51bcOpcmljbyBxdWUgcmVzdW1lIGVsIGRlc2VtcGXDsW8gZGUgdW4gbW9kZWxvIGRlIGNsYXNpZmljYWNpw7NuIGJpbmFyaWEsIGNhbGN1bGFkbyBjb21vIGVsIMOhcmVhIGJham8gbGEgY3VydmEgUk9DOyB1biBBVUMgbcOhcyBhbHRvIGluZGljYSBtZWpvciBkaXNjcmltaW5hY2nDs24uJwogICAgICB9LCB7CiAgICAgICAgdGVybWlubzogJzxpPkJhZ2dpbmc8L2k+ICg8aT5Cb290c3RyYXAgQWdncmVnYXRpbmc8L2k+KScsCiAgICAgICAgc2lnbmlmaWNhZG86ICdUw6ljbmljYSBkZSBlbnNhbWJsYWRvIHF1ZSBtZWpvcmEgbGEgcHJlY2lzacOzbiB5IGVzdGFiaWxpZGFkIGRlIGxvcyBtb2RlbG9zIGFsIGVudHJlbmFyIG3Dumx0aXBsZXMgbW9kZWxvcyBlbiBzdWJjb25qdW50b3MgYWxlYXRvcmlvcyB5IHByb21lZGlhciBzdXMgcHJlZGljY2lvbmVzLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICc8aT5Cb29zdGluZzwvaT4nLAogICAgICAgIHNpZ25pZmljYWRvOiAnVMOpY25pY2EgZGUgZW5zYW1ibGFkbyBxdWUgY29tYmluYSBzZWN1ZW5jaWFsbWVudGUgbW9kZWxvcyBkw6liaWxlcywgZW5mb2PDoW5kb3NlIGVuIGNvcnJlZ2lyIGxvcyBlcnJvcmVzIGRlIGxvcyBtb2RlbG9zIGFudGVyaW9yZXMgcGFyYSBjcmVhciB1biBtb2RlbG8gZmluYWwgbcOhcyBwcmVjaXNvLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICdDdXJ2YSBST0MnLAogICAgICAgIHNpZ25pZmljYWRvOiAnR3LDoWZpY28gcXVlIHJlcHJlc2VudGEgbGEgcmVsYWNpw7NuIGVudHJlIGxhIHRhc2EgZGUgdmVyZGFkZXJvcyBwb3NpdGl2b3MgKHNlbnNpYmlsaWRhZCkgeSBsYSB0YXNhIGRlIGZhbHNvcyBwb3NpdGl2b3MgYSBkaWZlcmVudGVzIHVtYnJhbGVzIGRlIGRlY2lzacOzbi4nCiAgICAgIH0sIHsKICAgICAgICB0ZXJtaW5vOiAnRGF0b3MgZGVzYmFsYW5jZWFkb3MnLAogICAgICAgIHNpZ25pZmljYWRvOiAnQ29uanVudG9zIGRlIGRhdG9zIGRvbmRlIGxhcyBjbGFzZXMgbm8gZXN0w6FuIHJlcHJlc2VudGFkYXMgZGUgbWFuZXJhIGVxdWl0YXRpdmEsIGxvIHF1ZSBwdWVkZSBjb25kdWNpciBhIG1vZGVsb3MgcXVlIGlnbm9yYW4gbGFzIGNsYXNlcyBtaW5vcml0YXJpYXMuJwogICAgICB9LCB7CiAgICAgICAgdGVybWlubzogJ0YxLTxlbT5TY29yZTwvZW0+JywKICAgICAgICBzaWduaWZpY2FkbzogJ01lZGlkYSBxdWUgY29tYmluYSBsYSBwcmVjaXNpw7NuIHkgZWwgcmVjYWxsIGVuIHVuYSBzb2xhIG3DqXRyaWNhIGFybW9uaXphZGEsIHByb3BvcmNpb25hbmRvIHVuYSBldmFsdWFjacOzbiBlcXVpbGlicmFkYSBkZWwgcmVuZGltaWVudG8gZGVsIG1vZGVsby4nCiAgICAgIH0sIHsKICAgICAgICB0ZXJtaW5vOiAnTWF0cml6IGRlIGNvbmZ1c2nDs24nLAogICAgICAgIHNpZ25pZmljYWRvOiAnVGFibGEgcXVlIHBlcm1pdGUgdmlzdWFsaXphciBlbCBkZXNlbXBlw7FvIGRlIHVuIG1vZGVsbyBkZSBjbGFzaWZpY2FjacOzbiwgbW9zdHJhbmRvIGxhcyBwcmVkaWNjaW9uZXMgY29ycmVjdGFzIGUgaW5jb3JyZWN0YXMgeSBkaXN0aW5ndWllbmRvIGVudHJlIHZlcmRhZGVyb3MgeSBmYWxzb3MuJwogICAgICB9LCB7CiAgICAgICAgdGVybWlubzogJ1ByZWNpc2nDs24gKDxpPkFjY3VyYWN5PC9pPiknLAogICAgICAgIHNpZ25pZmljYWRvOiAnTWVkaWRhIHF1ZSBpbmRpY2EgZWwgcG9yY2VudGFqZSBkZSBwcmVkaWNjaW9uZXMgY29ycmVjdGFzIHJlYWxpemFkYXMgcG9yIHVuIG1vZGVsbyBlbiBjb21wYXJhY2nDs24gY29uIGVsIHRvdGFsIGRlIHByZWRpY2Npb25lcyByZWFsaXphZGFzLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICdQcmVjaXNpw7NuICg8aT5QcmVjaXNpb248L2k+KScsCiAgICAgICAgc2lnbmlmaWNhZG86ICdNw6l0cmljYSBxdWUgaW5kaWNhIGxhIHByb3BvcmNpw7NuIGRlIHZlcmRhZGVyb3MgcG9zaXRpdm9zIGVudHJlIHRvZG9zIGxvcyBjYXNvcyBxdWUgZWwgbW9kZWxvIGhhIHByZWRpY2hvIGNvbW8gcG9zaXRpdm9zLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICc8aT5SYW5kb20gZm9yZXN0PC9pPicsCiAgICAgICAgc2lnbmlmaWNhZG86ICdBbGdvcml0bW8gZGUgZW5zYW1ibGFkbyBxdWUgY29uc3RydXllIG3Dumx0aXBsZXMgw6FyYm9sZXMgZGUgZGVjaXNpw7NuIHV0aWxpemFuZG8gbXVlc3RyYXMgYWxlYXRvcmlhcyB5IGNvbWJpbmEgc3VzIHByZWRpY2Npb25lcyBwYXJhIG1lam9yYXIgZWwgcmVuZGltaWVudG8uJwogICAgICB9LCB7CiAgICAgICAgdGVybWlubzogJzxpPlJlY2FsbDwvaT4gKFNlbnNpYmlsaWRhZCknLAogICAgICAgIHNpZ25pZmljYWRvOiAnTcOpdHJpY2EgcXVlIG1pZGUgbGEgcHJvcG9yY2nDs24gZGUgdmVyZGFkZXJvcyBwb3NpdGl2b3MgaWRlbnRpZmljYWRvcyBjb3JyZWN0YW1lbnRlIHBvciBlbCBtb2RlbG8gZW4gcmVsYWNpw7NuIGNvbiBlbCB0b3RhbCBkZSBjYXNvcyByZWFsZXMgcG9zaXRpdm9zLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICdSb2J1c3RleicsCiAgICAgICAgc2lnbmlmaWNhZG86ICdDYXBhY2lkYWQgZGUgdW4gbW9kZWxvIHBhcmEgbWFudGVuZXIgdW4gcmVuZGltaWVudG8gY29uc2lzdGVudGUgYW50ZSB2YXJpYWNpb25lcyBlbiBsb3MgZGF0b3MgZGUgZW50cmFkYSwgY29tbyBydWlkbywgdmFsb3JlcyBhdMOtcGljb3MgbyBjYW1iaW9zIGVuIGxhIGRpc3RyaWJ1Y2nDs24uJwogICAgICB9LCB7CiAgICAgICAgdGVybWlubzogJ1NvYnJlYWp1c3RlICg8aT5PdmVyZml0dGluZzwvaT4pJywKICAgICAgICBzaWduaWZpY2FkbzogJ1NpdHVhY2nDs24gZW4gbGEgcXVlIHVuIG1vZGVsbyBhcHJlbmRlIGRlbWFzaWFkbyBiaWVuIGxvcyBkZXRhbGxlcyB5IGVsIHJ1aWRvIGRlbCBjb25qdW50byBkZSBlbnRyZW5hbWllbnRvLCByZXN1bHRhbmRvIGVuIHVuIHJlbmRpbWllbnRvIGRlZmljaWVudGUgZW4gbnVldm9zIGRhdG9zLicKICAgICAgfSwgewogICAgICAgIHRlcm1pbm86ICc8aT5TdG9yeXRlbGxpbmc8L2k+IGVuIGNpZW5jaWEgZGUgZGF0b3MnLAogICAgICAgIHNpZ25pZmljYWRvOiAnVMOpY25pY2EgZGUgY29tdW5pY2FjacOzbiBxdWUgdXRpbGl6YSBuYXJyYXRpdmFzIHkgdmlzdWFsaXphY2lvbmVzIHBhcmEgcHJlc2VudGFyIHJlc3VsdGFkb3MgeSBoYWxsYXpnb3MgZGUgbWFuZXJhIGNvbXByZW5zaWJsZSB5IGF0cmFjdGl2YS4nCiAgICAgIH0sIHsKICAgICAgICB0ZXJtaW5vOiAnU3ViYWp1c3RlICg8aT5VbmRlcmZpdHRpbmc8L2k+KScsCiAgICAgICAgc2lnbmlmaWNhZG86ICdPY3VycmUgY3VhbmRvIHVuIG1vZGVsbyBlcyBkZW1hc2lhZG8gc2ltcGxlIHBhcmEgY2FwdHVyYXIgbGEgZXN0cnVjdHVyYSBzdWJ5YWNlbnRlIGRlIGxvcyBkYXRvcywgcmVzdWx0YW5kbyBlbiB1biByZW5kaW1pZW50byBkZWZpY2llbnRlIGVuIGVudHJlbmFtaWVudG8geSBwcnVlYmEuJwogICAgICB9XQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcmRlcmVkRGF0YSgpIHsKICAgICAgY29uc3QgbmV3R2xvc2FyaW9EYXRhID0gWy4uLnRoaXMuZ2xvc2FyaW9EYXRhXTsKICAgICAgbmV3R2xvc2FyaW9EYXRhLmZvckVhY2goZWxlbWVudCA9PiB7CiAgICAgICAgZWxlbWVudC5zaWduaWZpY2FkbyA9IGVsZW1lbnQuc2lnbmlmaWNhZG8uY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50LnNpZ25pZmljYWRvLnNsaWNlKDEpOwogICAgICB9KTsKICAgICAgY29uc3Qgc29ydGVkRGF0YSA9IFsuLi5uZXdHbG9zYXJpb0RhdGFdLnJlZHVjZSgociwgZSkgPT4gewogICAgICAgIGNvbnN0IGxldHJhID0gdGhpcy5xdWl0YXJBY2VudG9zKGUudGVybWluby50b0xvd2VyQ2FzZSgpKVswXTsKICAgICAgICBpZiAoIXJbbGV0cmFdKSByW2xldHJhXSA9IHsKICAgICAgICAgIGxldHJhLAogICAgICAgICAgdGVybWlub3M6IFtlXQogICAgICAgIH07ZWxzZSByW2xldHJhXS50ZXJtaW5vcy5wdXNoKGUpOwogICAgICAgIHJldHVybiByOwogICAgICB9LCB7fSk7CiAgICAgIGNvbnN0IHNvbG9MZXRyYXMgPSBPYmplY3Qua2V5cyhzb3J0ZWREYXRhKS5zb3J0KCk7CiAgICAgIGNvbnN0IG5ld1NvcnRlZERhdGEgPSBbXTsKICAgICAgc29sb0xldHJhcy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgIGNvbnN0IGxldHJhT2JqID0gc29ydGVkRGF0YVtlbGVtZW50XTsKICAgICAgICBsZXQgdGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vczsKICAgICAgICBpZiAodGVybWlub3MubGVuZ3RoID4gMSkgewogICAgICAgICAgY29uc3QgdGVybWlub3NPcmRlbmFkb3MgPSBbXTsKICAgICAgICAgIGNvbnN0IHNvbG9UZXJtaW5vcyA9IGxldHJhT2JqLnRlcm1pbm9zLm1hcCh0ZXJtT2JqID0+IHRlcm1PYmoudGVybWlubykuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgICBjb25zdCBhbiA9IHRoaXMucXVpdGFyQWNlbnRvcyhhKS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBibiA9IHRoaXMucXVpdGFyQWNlbnRvcyhiKS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBpZiAoYW4gPCBibikgcmV0dXJuIC0xOwogICAgICAgICAgICBpZiAoYm4gPCBhbikgcmV0dXJuIDE7CiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgfSk7CiAgICAgICAgICBzb2xvVGVybWlub3MuZm9yRWFjaCh0ZXJtID0+IHsKICAgICAgICAgICAgdGVybWlub3NPcmRlbmFkb3MucHVzaCh0ZXJtaW5vcy5maW5kKHRlcm1pbm8gPT4gdGVybWluby50ZXJtaW5vID09PSB0ZXJtKSk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHRlcm1pbm9zID0gdGVybWlub3NPcmRlbmFkb3M7CiAgICAgICAgfQogICAgICAgIG5ld1NvcnRlZERhdGEucHVzaCh7CiAgICAgICAgICBsZXRyYTogbGV0cmFPYmoubGV0cmEudG9VcHBlckNhc2UoKSwKICAgICAgICAgIHRlcm1pbm9zOiB0ZXJtaW5vcwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld1NvcnRlZERhdGE7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["plantillaMixins","name","mixins","data","glosarioData","termino","significado","computed","orderedData","newGlosarioData","forEach","element","charAt","toLowerCase","slice","sortedData","reduce","r","e","letra","quitarAcentos","terminos","push","soloLetras","Object","keys","sort","newSortedData","letraObj","length","terminosOrdenados","soloTerminos","map","termObj","a","b","an","bn","term","find","toUpperCase"],"sources":["src/pages/Glosario.vue"],"sourcesContent":["<template>\n  <div class=\"curso-main-container glosario\">\n    <BannerInterno icono=\"fas fa-atlas\" titulo=\"Glosario\"></BannerInterno>\n    <div class=\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\">\n      <div\n        v-for=\"letra in orderedData\"\n        :key=\"'letra-' + letra.letra\"\n        class=\"glosario__letra-item mb-2\"\n      >\n        <div class=\"glosario__letra-item__letra me-4\">\n          <div class=\"glosario__letra-item__letra__icono\">\n            <span>{{ letra.letra }}</span>\n          </div>\n        </div>\n        <div class=\"glosario__letra-item__texto\">\n          <p\n            v-for=\"termino in letra.terminos\"\n            :key=\"termino.termino\"\n            class=\"mb-3\"\n          >\n            <strong><i class=\"lista-ul__vineta\"></i></strong\n            ><strong v-html=\"termino.terminoHtml || termino.termino\"> </strong\n            ><strong>: </strong><span v-html=\"termino.significado\"></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'Área bajo la curva (AUC)',\n          significado:\n            'Valor numérico que resume el desempeño de un modelo de clasificación binaria, calculado como el área bajo la curva ROC; un AUC más alto indica mejor discriminación.',\n        },\n        {\n          termino: '<i>Bagging</i> (<i>Bootstrap Aggregating</i>)',\n          significado:\n            'Técnica de ensamblado que mejora la precisión y estabilidad de los modelos al entrenar múltiples modelos en subconjuntos aleatorios y promediar sus predicciones.',\n        },\n        {\n          termino: '<i>Boosting</i>',\n          significado:\n            'Técnica de ensamblado que combina secuencialmente modelos débiles, enfocándose en corregir los errores de los modelos anteriores para crear un modelo final más preciso.',\n        },\n        {\n          termino: 'Curva ROC',\n          significado:\n            'Gráfico que representa la relación entre la tasa de verdaderos positivos (sensibilidad) y la tasa de falsos positivos a diferentes umbrales de decisión.',\n        },\n        {\n          termino: 'Datos desbalanceados',\n          significado:\n            'Conjuntos de datos donde las clases no están representadas de manera equitativa, lo que puede conducir a modelos que ignoran las clases minoritarias.',\n        },\n        {\n          termino: 'F1-<em>Score</em>',\n          significado:\n            'Medida que combina la precisión y el recall en una sola métrica armonizada, proporcionando una evaluación equilibrada del rendimiento del modelo.',\n        },\n        {\n          termino: 'Matriz de confusión',\n          significado:\n            'Tabla que permite visualizar el desempeño de un modelo de clasificación, mostrando las predicciones correctas e incorrectas y distinguiendo entre verdaderos y falsos.',\n        },\n        {\n          termino: 'Precisión (<i>Accuracy</i>)',\n          significado:\n            'Medida que indica el porcentaje de predicciones correctas realizadas por un modelo en comparación con el total de predicciones realizadas.',\n        },\n        {\n          termino: 'Precisión (<i>Precision</i>)',\n          significado:\n            'Métrica que indica la proporción de verdaderos positivos entre todos los casos que el modelo ha predicho como positivos.',\n        },\n        {\n          termino: '<i>Random forest</i>',\n          significado:\n            'Algoritmo de ensamblado que construye múltiples árboles de decisión utilizando muestras aleatorias y combina sus predicciones para mejorar el rendimiento.',\n        },\n        {\n          termino: '<i>Recall</i> (Sensibilidad)',\n          significado:\n            'Métrica que mide la proporción de verdaderos positivos identificados correctamente por el modelo en relación con el total de casos reales positivos.',\n        },\n        {\n          termino: 'Robustez',\n          significado:\n            'Capacidad de un modelo para mantener un rendimiento consistente ante variaciones en los datos de entrada, como ruido, valores atípicos o cambios en la distribución.',\n        },\n        {\n          termino: 'Sobreajuste (<i>Overfitting</i>)',\n          significado:\n            'Situación en la que un modelo aprende demasiado bien los detalles y el ruido del conjunto de entrenamiento, resultando en un rendimiento deficiente en nuevos datos.',\n        },\n        {\n          termino: '<i>Storytelling</i> en ciencia de datos',\n          significado:\n            'Técnica de comunicación que utiliza narrativas y visualizaciones para presentar resultados y hallazgos de manera comprensible y atractiva.',\n        },\n        {\n          termino: 'Subajuste (<i>Underfitting</i>)',\n          significado:\n            'Ocurre cuando un modelo es demasiado simple para capturar la estructura subyacente de los datos, resultando en un rendimiento deficiente en entrenamiento y prueba.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"],"mappings":";;;;;;;AA+BA,OAAAA,eAAA;AACA;EACAC,IAAA;EACAC,MAAA,GAAAF,eAAA;EACAG,KAAA;IACA;MACAC,YAAA,GACA;QACAC,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA,GACA;QACAD,OAAA;QACAC,WAAA,EACA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,MAAAC,eAAA,YAAAL,YAAA;MACAK,eAAA,CAAAC,OAAA,CAAAC,OAAA;QACAA,OAAA,CAAAL,WAAA,GACAK,OAAA,CAAAL,WAAA,CAAAM,MAAA,IAAAC,WAAA,KACAF,OAAA,CAAAL,WAAA,CAAAQ,KAAA;MACA;MAEA,MAAAC,UAAA,OAAAN,eAAA,EAAAO,MAAA,EAAAC,CAAA,EAAAC,CAAA;QACA,MAAAC,KAAA,QAAAC,aAAA,CAAAF,CAAA,CAAAb,OAAA,CAAAQ,WAAA;QACA,KAAAI,CAAA,CAAAE,KAAA,GAAAF,CAAA,CAAAE,KAAA;UAAAA,KAAA;UAAAE,QAAA,GAAAH,CAAA;QAAA,OACAD,CAAA,CAAAE,KAAA,EAAAE,QAAA,CAAAC,IAAA,CAAAJ,CAAA;QACA,OAAAD,CAAA;MACA;MAEA,MAAAM,UAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAV,UAAA,EAAAW,IAAA;MACA,MAAAC,aAAA;MAEAJ,UAAA,CAAAb,OAAA,CAAAC,OAAA;QACA,MAAAiB,QAAA,GAAAb,UAAA,CAAAJ,OAAA;QACA,IAAAU,QAAA,GAAAO,QAAA,CAAAP,QAAA;QAEA,IAAAA,QAAA,CAAAQ,MAAA;UACA,MAAAC,iBAAA;UACA,MAAAC,YAAA,GAAAH,QAAA,CAAAP,QAAA,CACAW,GAAA,CAAAC,OAAA,IAAAA,OAAA,CAAA5B,OAAA,EACAqB,IAAA,EAAAQ,CAAA,EAAAC,CAAA;YACA,MAAAC,EAAA,QAAAhB,aAAA,CAAAc,CAAA,EAAArB,WAAA;YACA,MAAAwB,EAAA,QAAAjB,aAAA,CAAAe,CAAA,EAAAtB,WAAA;YACA,IAAAuB,EAAA,GAAAC,EAAA;YACA,IAAAA,EAAA,GAAAD,EAAA;YACA;UACA;UACAL,YAAA,CAAArB,OAAA,CAAA4B,IAAA;YACAR,iBAAA,CAAAR,IAAA,CACAD,QAAA,CAAAkB,IAAA,CAAAlC,OAAA,IAAAA,OAAA,CAAAA,OAAA,KAAAiC,IAAA,CACA;UACA;UACAjB,QAAA,GAAAS,iBAAA;QACA;QACAH,aAAA,CAAAL,IAAA;UACAH,KAAA,EAAAS,QAAA,CAAAT,KAAA,CAAAqB,WAAA;UACAnB,QAAA,EAAAA;QACA;MACA;MACA,OAAAM,aAAA;IACA;EACA;AACA","ignoreList":[]}]}