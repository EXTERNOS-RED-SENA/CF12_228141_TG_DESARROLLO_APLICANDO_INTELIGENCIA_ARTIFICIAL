{"remainingRequest":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue","mtime":1734970342831},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF12_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwbGFudGlsbGFNaXhpbnMgZnJvbSAnQC9qcy9wbGFudGlsbGFNaXhpbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2xvc2FyaW8nLAogIG1peGluczogW3BsYW50aWxsYU1peGluc10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdsb3NhcmlvRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICfDgXJlYSBiYWpvIGxhIGN1cnZhIChBVUMpJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnVmFsb3IgbnVtw6lyaWNvIHF1ZSByZXN1bWUgZWwgZGVzZW1wZcOxbyBkZSB1biBtb2RlbG8gZGUgY2xhc2lmaWNhY2nDs24gYmluYXJpYSwgY2FsY3VsYWRvIGNvbW8gZWwgw6FyZWEgYmFqbyBsYSBjdXJ2YSBST0M7IHVuIEFVQyBtw6FzIGFsdG8gaW5kaWNhIG1lam9yIGRpc2NyaW1pbmFjacOzbi4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJzxpPkJhZ2dpbmc8L2k+ICg8aT5Cb290c3RyYXAgQWdncmVnYXRpbmc8L2k+KScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1TDqWNuaWNhIGRlIGVuc2FtYmxhZG8gcXVlIG1lam9yYSBsYSBwcmVjaXNpw7NuIHkgZXN0YWJpbGlkYWQgZGUgbG9zIG1vZGVsb3MgYWwgZW50cmVuYXIgbcO6bHRpcGxlcyBtb2RlbG9zIGVuIHN1YmNvbmp1bnRvcyBhbGVhdG9yaW9zIHkgcHJvbWVkaWFyIHN1cyBwcmVkaWNjaW9uZXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICc8aT5Cb29zdGluZzwvaT4nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdUw6ljbmljYSBkZSBlbnNhbWJsYWRvIHF1ZSBjb21iaW5hIHNlY3VlbmNpYWxtZW50ZSBtb2RlbG9zIGTDqWJpbGVzLCBlbmZvY8OhbmRvc2UgZW4gY29ycmVnaXIgbG9zIGVycm9yZXMgZGUgbG9zIG1vZGVsb3MgYW50ZXJpb3JlcyBwYXJhIGNyZWFyIHVuIG1vZGVsbyBmaW5hbCBtw6FzIHByZWNpc28uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdDdXJ2YSBST0MnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdHcsOhZmljbyBxdWUgcmVwcmVzZW50YSBsYSByZWxhY2nDs24gZW50cmUgbGEgdGFzYSBkZSB2ZXJkYWRlcm9zIHBvc2l0aXZvcyAoc2Vuc2liaWxpZGFkKSB5IGxhIHRhc2EgZGUgZmFsc29zIHBvc2l0aXZvcyBhIGRpZmVyZW50ZXMgdW1icmFsZXMgZGUgZGVjaXNpw7NuLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnRGF0b3MgZGVzYmFsYW5jZWFkb3MnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdDb25qdW50b3MgZGUgZGF0b3MgZG9uZGUgbGFzIGNsYXNlcyBubyBlc3TDoW4gcmVwcmVzZW50YWRhcyBkZSBtYW5lcmEgZXF1aXRhdGl2YSwgbG8gcXVlIHB1ZWRlIGNvbmR1Y2lyIGEgbW9kZWxvcyBxdWUgaWdub3JhbiBsYXMgY2xhc2VzIG1pbm9yaXRhcmlhcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0YxLTxlbT5TY29yZTwvZW0+JywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnTWVkaWRhIHF1ZSBjb21iaW5hIGxhIHByZWNpc2nDs24geSBlbCByZWNhbGwgZW4gdW5hIHNvbGEgbcOpdHJpY2EgYXJtb25pemFkYSwgcHJvcG9yY2lvbmFuZG8gdW5hIGV2YWx1YWNpw7NuIGVxdWlsaWJyYWRhIGRlbCByZW5kaW1pZW50byBkZWwgbW9kZWxvLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnTWF0cml6IGRlIGNvbmZ1c2nDs24nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdUYWJsYSBxdWUgcGVybWl0ZSB2aXN1YWxpemFyIGVsIGRlc2VtcGXDsW8gZGUgdW4gbW9kZWxvIGRlIGNsYXNpZmljYWNpw7NuLCBtb3N0cmFuZG8gbGFzIHByZWRpY2Npb25lcyBjb3JyZWN0YXMgZSBpbmNvcnJlY3RhcyB5IGRpc3Rpbmd1aWVuZG8gZW50cmUgdmVyZGFkZXJvcyB5IGZhbHNvcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ1ByZWNpc2nDs24gKDxpPkFjY3VyYWN5PC9pPiknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdNZWRpZGEgcXVlIGluZGljYSBlbCBwb3JjZW50YWplIGRlIHByZWRpY2Npb25lcyBjb3JyZWN0YXMgcmVhbGl6YWRhcyBwb3IgdW4gbW9kZWxvIGVuIGNvbXBhcmFjacOzbiBjb24gZWwgdG90YWwgZGUgcHJlZGljY2lvbmVzIHJlYWxpemFkYXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdQcmVjaXNpw7NuICg8aT5QcmVjaXNpb248L2k+KScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ03DqXRyaWNhIHF1ZSBpbmRpY2EgbGEgcHJvcG9yY2nDs24gZGUgdmVyZGFkZXJvcyBwb3NpdGl2b3MgZW50cmUgdG9kb3MgbG9zIGNhc29zIHF1ZSBlbCBtb2RlbG8gaGEgcHJlZGljaG8gY29tbyBwb3NpdGl2b3MuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICc8aT5SYW5kb20gZm9yZXN0PC9pPicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0FsZ29yaXRtbyBkZSBlbnNhbWJsYWRvIHF1ZSBjb25zdHJ1eWUgbcO6bHRpcGxlcyDDoXJib2xlcyBkZSBkZWNpc2nDs24gdXRpbGl6YW5kbyBtdWVzdHJhcyBhbGVhdG9yaWFzIHkgY29tYmluYSBzdXMgcHJlZGljY2lvbmVzIHBhcmEgbWVqb3JhciBlbCByZW5kaW1pZW50by4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJzxpPlJlY2FsbDwvaT4gKFNlbnNpYmlsaWRhZCknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdNw6l0cmljYSBxdWUgbWlkZSBsYSBwcm9wb3JjacOzbiBkZSB2ZXJkYWRlcm9zIHBvc2l0aXZvcyBpZGVudGlmaWNhZG9zIGNvcnJlY3RhbWVudGUgcG9yIGVsIG1vZGVsbyBlbiByZWxhY2nDs24gY29uIGVsIHRvdGFsIGRlIGNhc29zIHJlYWxlcyBwb3NpdGl2b3MuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdSb2J1c3RleicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0NhcGFjaWRhZCBkZSB1biBtb2RlbG8gcGFyYSBtYW50ZW5lciB1biByZW5kaW1pZW50byBjb25zaXN0ZW50ZSBhbnRlIHZhcmlhY2lvbmVzIGVuIGxvcyBkYXRvcyBkZSBlbnRyYWRhLCBjb21vIHJ1aWRvLCB2YWxvcmVzIGF0w61waWNvcyBvIGNhbWJpb3MgZW4gbGEgZGlzdHJpYnVjacOzbi4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ1NvYnJlYWp1c3RlICg8aT5PdmVyZml0dGluZzwvaT4pJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnU2l0dWFjacOzbiBlbiBsYSBxdWUgdW4gbW9kZWxvIGFwcmVuZGUgZGVtYXNpYWRvIGJpZW4gbG9zIGRldGFsbGVzIHkgZWwgcnVpZG8gZGVsIGNvbmp1bnRvIGRlIGVudHJlbmFtaWVudG8sIHJlc3VsdGFuZG8gZW4gdW4gcmVuZGltaWVudG8gZGVmaWNpZW50ZSBlbiBudWV2b3MgZGF0b3MuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICc8aT5TdG9yeXRlbGxpbmc8L2k+IGVuIGNpZW5jaWEgZGUgZGF0b3MnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdUw6ljbmljYSBkZSBjb211bmljYWNpw7NuIHF1ZSB1dGlsaXphIG5hcnJhdGl2YXMgeSB2aXN1YWxpemFjaW9uZXMgcGFyYSBwcmVzZW50YXIgcmVzdWx0YWRvcyB5IGhhbGxhemdvcyBkZSBtYW5lcmEgY29tcHJlbnNpYmxlIHkgYXRyYWN0aXZhLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnU3ViYWp1c3RlICg8aT5VbmRlcmZpdHRpbmc8L2k+KScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ09jdXJyZSBjdWFuZG8gdW4gbW9kZWxvIGVzIGRlbWFzaWFkbyBzaW1wbGUgcGFyYSBjYXB0dXJhciBsYSBlc3RydWN0dXJhIHN1YnlhY2VudGUgZGUgbG9zIGRhdG9zLCByZXN1bHRhbmRvIGVuIHVuIHJlbmRpbWllbnRvIGRlZmljaWVudGUgZW4gZW50cmVuYW1pZW50byB5IHBydWViYS4nLAogICAgICAgIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgb3JkZXJlZERhdGEoKSB7CiAgICAgIGNvbnN0IG5ld0dsb3NhcmlvRGF0YSA9IFsuLi50aGlzLmdsb3NhcmlvRGF0YV0KICAgICAgbmV3R2xvc2FyaW9EYXRhLmZvckVhY2goZWxlbWVudCA9PiB7CiAgICAgICAgZWxlbWVudC5zaWduaWZpY2FkbyA9CiAgICAgICAgICBlbGVtZW50LnNpZ25pZmljYWRvLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsKICAgICAgICAgIGVsZW1lbnQuc2lnbmlmaWNhZG8uc2xpY2UoMSkKICAgICAgfSkKCiAgICAgIGNvbnN0IHNvcnRlZERhdGEgPSBbLi4ubmV3R2xvc2FyaW9EYXRhXS5yZWR1Y2UoKHIsIGUpID0+IHsKICAgICAgICBjb25zdCBsZXRyYSA9IHRoaXMucXVpdGFyQWNlbnRvcyhlLnRlcm1pbm8udG9Mb3dlckNhc2UoKSlbMF0KICAgICAgICBpZiAoIXJbbGV0cmFdKSByW2xldHJhXSA9IHsgbGV0cmEsIHRlcm1pbm9zOiBbZV0gfQogICAgICAgIGVsc2UgcltsZXRyYV0udGVybWlub3MucHVzaChlKQogICAgICAgIHJldHVybiByCiAgICAgIH0sIHt9KQoKICAgICAgY29uc3Qgc29sb0xldHJhcyA9IE9iamVjdC5rZXlzKHNvcnRlZERhdGEpLnNvcnQoKQogICAgICBjb25zdCBuZXdTb3J0ZWREYXRhID0gW10KCiAgICAgIHNvbG9MZXRyYXMuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBjb25zdCBsZXRyYU9iaiA9IHNvcnRlZERhdGFbZWxlbWVudF0KICAgICAgICBsZXQgdGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vcwoKICAgICAgICBpZiAodGVybWlub3MubGVuZ3RoID4gMSkgewogICAgICAgICAgY29uc3QgdGVybWlub3NPcmRlbmFkb3MgPSBbXQogICAgICAgICAgY29uc3Qgc29sb1Rlcm1pbm9zID0gbGV0cmFPYmoudGVybWlub3MKICAgICAgICAgICAgLm1hcCh0ZXJtT2JqID0+IHRlcm1PYmoudGVybWlubykKICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgICAgICBjb25zdCBhbiA9IHRoaXMucXVpdGFyQWNlbnRvcyhhKS50b0xvd2VyQ2FzZSgpCiAgICAgICAgICAgICAgY29uc3QgYm4gPSB0aGlzLnF1aXRhckFjZW50b3MoYikudG9Mb3dlckNhc2UoKQogICAgICAgICAgICAgIGlmIChhbiA8IGJuKSByZXR1cm4gLTEKICAgICAgICAgICAgICBpZiAoYm4gPCBhbikgcmV0dXJuIDEKICAgICAgICAgICAgICByZXR1cm4gMAogICAgICAgICAgICB9KQogICAgICAgICAgc29sb1Rlcm1pbm9zLmZvckVhY2godGVybSA9PiB7CiAgICAgICAgICAgIHRlcm1pbm9zT3JkZW5hZG9zLnB1c2goCiAgICAgICAgICAgICAgdGVybWlub3MuZmluZCh0ZXJtaW5vID0+IHRlcm1pbm8udGVybWlubyA9PT0gdGVybSksCiAgICAgICAgICAgICkKICAgICAgICAgIH0pCiAgICAgICAgICB0ZXJtaW5vcyA9IHRlcm1pbm9zT3JkZW5hZG9zCiAgICAgICAgfQogICAgICAgIG5ld1NvcnRlZERhdGEucHVzaCh7CiAgICAgICAgICBsZXRyYTogbGV0cmFPYmoubGV0cmEudG9VcHBlckNhc2UoKSwKICAgICAgICAgIHRlcm1pbm9zOiB0ZXJtaW5vcywKICAgICAgICB9KQogICAgICB9KQogICAgICByZXR1cm4gbmV3U29ydGVkRGF0YQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Glosario.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"curso-main-container glosario\">\n    <BannerInterno icono=\"fas fa-atlas\" titulo=\"Glosario\"></BannerInterno>\n    <div class=\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\">\n      <div\n        v-for=\"letra in orderedData\"\n        :key=\"'letra-' + letra.letra\"\n        class=\"glosario__letra-item mb-2\"\n      >\n        <div class=\"glosario__letra-item__letra me-4\">\n          <div class=\"glosario__letra-item__letra__icono\">\n            <span>{{ letra.letra }}</span>\n          </div>\n        </div>\n        <div class=\"glosario__letra-item__texto\">\n          <p\n            v-for=\"termino in letra.terminos\"\n            :key=\"termino.termino\"\n            class=\"mb-3\"\n          >\n            <strong><i class=\"lista-ul__vineta\"></i></strong\n            ><strong v-html=\"termino.terminoHtml || termino.termino\"> </strong\n            ><strong>: </strong><span v-html=\"termino.significado\"></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'Área bajo la curva (AUC)',\n          significado:\n            'Valor numérico que resume el desempeño de un modelo de clasificación binaria, calculado como el área bajo la curva ROC; un AUC más alto indica mejor discriminación.',\n        },\n        {\n          termino: '<i>Bagging</i> (<i>Bootstrap Aggregating</i>)',\n          significado:\n            'Técnica de ensamblado que mejora la precisión y estabilidad de los modelos al entrenar múltiples modelos en subconjuntos aleatorios y promediar sus predicciones.',\n        },\n        {\n          termino: '<i>Boosting</i>',\n          significado:\n            'Técnica de ensamblado que combina secuencialmente modelos débiles, enfocándose en corregir los errores de los modelos anteriores para crear un modelo final más preciso.',\n        },\n        {\n          termino: 'Curva ROC',\n          significado:\n            'Gráfico que representa la relación entre la tasa de verdaderos positivos (sensibilidad) y la tasa de falsos positivos a diferentes umbrales de decisión.',\n        },\n        {\n          termino: 'Datos desbalanceados',\n          significado:\n            'Conjuntos de datos donde las clases no están representadas de manera equitativa, lo que puede conducir a modelos que ignoran las clases minoritarias.',\n        },\n        {\n          termino: 'F1-<em>Score</em>',\n          significado:\n            'Medida que combina la precisión y el recall en una sola métrica armonizada, proporcionando una evaluación equilibrada del rendimiento del modelo.',\n        },\n        {\n          termino: 'Matriz de confusión',\n          significado:\n            'Tabla que permite visualizar el desempeño de un modelo de clasificación, mostrando las predicciones correctas e incorrectas y distinguiendo entre verdaderos y falsos.',\n        },\n        {\n          termino: 'Precisión (<i>Accuracy</i>)',\n          significado:\n            'Medida que indica el porcentaje de predicciones correctas realizadas por un modelo en comparación con el total de predicciones realizadas.',\n        },\n        {\n          termino: 'Precisión (<i>Precision</i>)',\n          significado:\n            'Métrica que indica la proporción de verdaderos positivos entre todos los casos que el modelo ha predicho como positivos.',\n        },\n        {\n          termino: '<i>Random forest</i>',\n          significado:\n            'Algoritmo de ensamblado que construye múltiples árboles de decisión utilizando muestras aleatorias y combina sus predicciones para mejorar el rendimiento.',\n        },\n        {\n          termino: '<i>Recall</i> (Sensibilidad)',\n          significado:\n            'Métrica que mide la proporción de verdaderos positivos identificados correctamente por el modelo en relación con el total de casos reales positivos.',\n        },\n        {\n          termino: 'Robustez',\n          significado:\n            'Capacidad de un modelo para mantener un rendimiento consistente ante variaciones en los datos de entrada, como ruido, valores atípicos o cambios en la distribución.',\n        },\n        {\n          termino: 'Sobreajuste (<i>Overfitting</i>)',\n          significado:\n            'Situación en la que un modelo aprende demasiado bien los detalles y el ruido del conjunto de entrenamiento, resultando en un rendimiento deficiente en nuevos datos.',\n        },\n        {\n          termino: '<i>Storytelling</i> en ciencia de datos',\n          significado:\n            'Técnica de comunicación que utiliza narrativas y visualizaciones para presentar resultados y hallazgos de manera comprensible y atractiva.',\n        },\n        {\n          termino: 'Subajuste (<i>Underfitting</i>)',\n          significado:\n            'Ocurre cuando un modelo es demasiado simple para capturar la estructura subyacente de los datos, resultando en un rendimiento deficiente en entrenamiento y prueba.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}